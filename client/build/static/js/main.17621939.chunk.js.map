{"version":3,"sources":["components/admin/dashboard/Dashboard.module.scss","components/auth/Register.module.scss","components/auth/Login.module.scss","components/admin/auth/AdminLogin.module.scss","components/admin/TaskList/TaskList.module.scss","components/Home/Home.js","components/NotFound/NotFound.js","assets/toast.js","config/server.js","components/auth/Register.js","store/actions/user/authAction.js","components/auth/Login.js","store/actions/admin/authAction.js","components/admin/auth/AdminLogin.js","store/actions/user/taskAction.js","components/admin/TaskList/TaskList.js","components/admin/dashboard/Dashboard.js","App.js","serviceWorker.js","store/reducers/taskReducer.js","store/reducers/authReducer.js","store/reducers/rootReducer.js","index.js"],"names":["module","exports","dash_layout","center_items","light_text_header","moreOptions","moreOptionsRight","loading","loading_bar","right_bg","contain","card","Home","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","props","user","react_default","a","createElement","react_router","to","Component","connect","state","auth","NotFound","toastr","$","window","showSuccessToast","message","toast","heading","text","showHideTransition","icon","loaderBg","position","showDangerToast","baseUrl","Register","_getPrototypeOf2","_this","_len","length","args","Array","_key","call","concat","username","email","password","handleChange","e","setState","defineProperty","target","id","handleSubmit","preventDefault","registerUser","className","style","onSubmit","htmlFor","type","onChange","required","react_router_dom","role","dispatch","ownProps","credentials","getState","Promise","resolve","reject","axios","post","then","res","localStorage","setItem","data","token","catch","err","response","register","console","log","history","push","Login","login","signIn","signInAdmin","AdminLogin","admin","backgroundColor","styles","config","headers","Content-Type","Authorization","getItem","TaskList","deleteComment","comment_id","renderSwitch","_this2","tasks","height","overflow","map","task","_id","description","comments","comment","listStyleType","color","cursor","onClick","delecomment","status","archiveTask","fontWeight","task_id","obj","put","Dashboard","user_id","componentWillMount","fetchTasks","users","fetchUsers","logout","clear","location","href","handleSelect","forEach","element","createNewTask","create_new_task","marginRight","float","src","alt","fontSize","marginLeft","name","cols","rows","custom_select","submit","admin_TaskList_TaskList","get","user_name","App","exact","path","component","Boolean","hostname","match","initState","taskReducer","undefined","action","objectSpread","toConsumableArray","newTask","authReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.17621939.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dash_layout\":\"Dashboard_dash_layout__3_oRq\",\"center_items\":\"Dashboard_center_items__1Lc13\",\"light_text_header\":\"Dashboard_light_text_header__3ObU5\",\"moreOptions\":\"Dashboard_moreOptions__IAuKk\",\"moreOptionsRight\":\"Dashboard_moreOptionsRight__3NnsF\",\"loading\":\"Dashboard_loading__23UhF\",\"loading_bar\":\"Dashboard_loading_bar__3h3Pe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"right_bg\":\"Register_right_bg__2xwDQ\",\"contain\":\"Register_contain__hOM5v\",\"card\":\"Register_card__2fGN0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"right_bg\":\"Login_right_bg__3PTtf\",\"contain\":\"Login_contain__1LhHx\",\"card\":\"Login_card__1197-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contain\":\"AdminLogin_contain__3ZaJE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dash_layout\":\"TaskList_dash_layout__3vAwi\",\"center_items\":\"TaskList_center_items__15KXR\",\"light_text_header\":\"TaskList_light_text_header__l1INS\",\"moreOptions\":\"TaskList_moreOptions__BU4ey\",\"moreOptionsRight\":\"TaskList_moreOptionsRight__rlmKL\",\"loading\":\"TaskList_loading__1Dh5D\",\"loading_bar\":\"TaskList_loading_bar__tDoeq\"};","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nexport class Home extends Component {\n    render() {\n        if (!this.props.user) {\n            return (\n                <Redirect to=\"/login\"></Redirect>\n            )\n        }\n        return (\n            <div>\n                <h1>At Home</h1>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.auth.user\n    }\n}\n\nexport default connect(mapStateToProps)(Home)\n","import React from 'react'\n\nexport default function NotFound() {\n    return (\n        <div>\n            <h1>Not Found</h1>\n        </div>\n    )\n}\n","const toastr = {};\nconst $ = window.$;\n\ntoastr.showSuccessToast = function (message) {\n    $.toast({\n        heading: 'Successful',\n        text: message,\n        showHideTransition: 'slide',\n        icon: 'success',\n        loaderBg: '#f96868',\n        position: 'top-right'\n    });\n};\n\n\ntoastr.showDangerToast = function (message) {\n    $.toast({\n        heading: 'Error',\n        text: message,\n        showHideTransition: 'fade',\n        icon: 'error',\n        loaderBg: '#f2a654',\n        position: 'top-right'\n    });\n};\n\nexport default toastr","export const baseUrl = 'http://localhost:3000/api/v1';","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport style from './Register.module.scss';\nimport { Link, Redirect } from 'react-router-dom';\nimport { register } from './../../store/actions/user/authAction';\n\nexport class Register extends Component {\n\n    state = {\n        username: '',\n        email: '',\n        password: ''\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.registerUser(this.state);\n    }\n\n    render() {\n        if (this.props.user) {\n            return (\n                <Redirect to=\"/\"></Redirect>\n            )\n        }\n        return (\n            <div>\n                <div className=\"row\">\n                    <div className=\"col-12 col-md-6\">\n                        <div className={`${style.contain}`}>\n                            <div className={`${style.card}`}>\n                                <div className=\"card-body pb-10\">\n                                    <h3 className=\"text-center\">Sign up</h3>\n                                    <form className=\"mt-4\" onSubmit={this.handleSubmit}>\n\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"username\" className=\"form-label\">Username</label>\n                                            <input type=\"text\" className=\"form-control\" id=\"username\" value={this.state.username} onChange={this.handleChange} required/>\n                                        </div>\n\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"email\" className=\"form-label\">Email</label>\n                                            <input type=\"email\" className=\"form-control\" id=\"email\" value={this.state.email} onChange={this.handleChange} required/>\n                                        </div>\n\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"password\" className=\"form-label\">Password</label>\n                                            <input type=\"password\" className=\"form-control\" id=\"password\" value={this.state.password} onChange={this.handleChange} required/>\n                                        </div>\n\n                                        <small className=\"mt-4\">\n                                            Already have an account?\n                                            <Link to=\"/login\">login</Link>\n                                        </small>\n\n                                        <div className=\"text-center mt-3\">\n                                            <button className=\"btn btn-success\">\n                                                Register\n                                                {\n                                                    this.props.loading ? (\n                                                        <div className=\"ml-4 spinner-border spinner-border-sm\" role=\"status\">\n                                                            <span className=\"sr-only\">Loading...</span>\n                                                        </div>\n                                                    ) : null\n                                                }\n                                            </button>\n                                        </div>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className={`col-0 col-md-6 ${style.right_bg}`}></div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        loading: state.auth.loading,\n        user: state.auth.user\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        registerUser: (credentials) => dispatch(register(credentials)).then(() => {\n            console.log('here')\n            ownProps.history.push('/')\n        }).catch(err => {\n            console.log(err)\n        })\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register)\n","import toastr from './../../../assets/toast'\nimport axios from 'axios';\nimport { baseUrl } from './../../../config/server';\n\nexport const signIn = (credentials) => {\n    return (dispatch, getState) => {\n        return new Promise ((resolve, reject) => {\n            dispatch({type: 'REQUESTING'})\n\n            // Make async request\n            axios.post(baseUrl + '/user/login', credentials).then(res => {\n                localStorage.setItem('payld_token', res.data.token)\n                toastr.showSuccessToast('User login was successful')\n                dispatch({ type: 'SUCCESSFUL' })\n                resolve()\n            }).catch(err => {\n                toastr.showDangerToast(err.response.data.message)\n                dispatch({ type: 'ERROR' })\n                reject(err.response.data.message)\n            })\n        })\n    }\n}\n\nexport const register = (credentials) => {\n    return (dispatch, getState) => {\n        return new Promise ((resolve, reject) => {\n            dispatch({type: 'REQUESTING'})\n            \n            // Make async request\n            axios.post(baseUrl + '/user/register', credentials).then(res => {\n                localStorage.setItem('payld_token', res.data.token)\n                toastr.showSuccessToast('User registration was successful')\n                dispatch({type: 'SUCCESSFUL'})\n                resolve()\n            }).catch(err => {\n                toastr.showDangerToast(err.response.data.message)\n                dispatch({type: 'ERROR'})\n                reject(err.response.data.message)\n            })\n        })\n    }\n}","import React, { Component } from 'react'\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signIn } from './../../store/actions/user/authAction';\nimport style from './Login.module.scss'\n\nexport class Login extends Component {\n    state = {\n        email: '',\n        password: ''\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.login(this.state);\n    }\n\n    render() {\n        if (this.props.user) {\n            return (\n                <Redirect to=\"/\"></Redirect>\n            )\n        }\n        return (\n            <div>\n                <div className=\"row\">\n                    <div className=\"col-12 col-md-6\">\n                        <div className={`${style.contain}`}>\n                            <div className={`${style.card}`}>\n                                <div className=\"card-body pb-10\">\n                                    <h3 className=\"text-center\">Sign In</h3>\n                                    <hr/>\n                                    <form className=\"mt-4\" onSubmit={this.handleSubmit}>\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"email\" className=\"form-label\">Email address</label>\n                                            <input type=\"email\" id=\"email\" value={this.state.email} onChange={this.handleChange} className=\"form-control\"/>\n                                        </div>\n\n                                        <div className=\"form-group\">\n                                            <label htmlFor=\"password\" className=\"form-label\">Password</label>\n                                            <input type=\"password\" id=\"password\" value={this.state.password} onChange={this.handleChange} className=\"form-control\"/>\n                                        </div>\n\n                                        <small className=\"mt-4\">\n                                            Don't have an account? \n                                            <Link to=\"/register\">register</Link>\n                                        </small>\n\n                                        <div className=\"text-center mt-3\">\n                                            <button className=\"btn btn-success\">\n                                                Login \n                                                {\n                                                    this.props.loading ? (\n                                                        <div className=\"ml-3 spinner-border spinner-border-sm\" role=\"status\">\n                                                            <span className=\"sr-only\">Loading...</span>\n                                                        </div>\n                                                    ) : null\n                                                }\n                                            </button>\n                                        </div>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={`col-0 col-md-6 ${style.right_bg}`}></div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        loading: state.auth.loading,\n        user: state.auth.user\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return  {\n        login: (credentials) => dispatch(signIn(credentials)).then(() => {\n            ownProps.history.push('/')\n        }).catch(err => {\n            console.log(err)\n        })\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)\n","import toastr from './../../../assets/toast'\nimport axios from 'axios';\nimport { baseUrl } from './../../../config/server';\n\nconst signInAdmin = (credentials) => {\n    return (dispatch, getState) => {\n        return new Promise((resolve, reject) => {\n            dispatch({ type: 'REQUESTING' })\n\n            // Make async request\n            axios.post(baseUrl + '/admin/login', credentials).then(res => {\n                localStorage.setItem('payld_token_s', res.data.token)\n                toastr.showSuccessToast('Admin login was successful')\n                dispatch({ type: 'ADMIN_SUCCESSFUL' });\n                resolve()\n            }).catch(err => {\n                console.log(err.response)\n                toastr.showDangerToast(err.response.data.message)\n                dispatch({ type: 'ERROR' })\n                reject(err.response.data.message)\n            })\n        })\n    }\n}\n\nexport default signInAdmin","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport signInAdmin from '../../../store/actions/admin/authAction';\nimport styles from './AdminLogin.module.scss'\nimport { Redirect } from 'react-router-dom';\n\nexport class AdminLogin extends Component {\n    state = {\n        email: '',\n        password: ''\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        this.props.login(this.state)\n    }\n\n    render() {\n        if (this.props.admin) return (\n            <Redirect to=\"/admin/dashboard\"></Redirect>\n        )\n        return (\n            <div>\n                <div style={{backgroundColor: '#F5F5F5'}}>\n                    <div className={`${styles.contain}`}>\n                        <div className=\"card\">\n                            <div className=\"card-body pb-10\">\n                                <div className=\"text-center\">Administrator Login</div>\n                                <hr/>\n                                <form onSubmit={this.handleSubmit} className=\"mt-4\">\n\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"email\" className=\"form-label\">Email address</label>\n                                        <input type=\"email\" className=\"form-control\" id=\"email\" value={this.state.email} onChange={this.handleChange} />\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"password\" className=\"form-label\">Password</label>\n                                        <input type=\"password\" className=\"form-control\" id=\"password\" value={this.state.password} onChange={this.handleChange} />\n                                    </div>\n\n                                    <div className=\"text-center mt-3\">\n                                        <button className=\"btn btn-success\">\n                                            Login\n                                            {\n                                                this.props.loading ? (\n                                                    <div className=\"ml-3 spinner-border spinner-border-sm\" role=\"status\">\n                                                        <span className=\"sr-only\">Loading...</span>\n                                                    </div>\n                                                ) : null\n                                            }\n                                        </button>\n                                    </div>\n\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        loading: state.auth.loading,\n        admin: state.auth.admin\n    }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n    return {\n        login: (credentials) => dispatch(signInAdmin(credentials)).then(() => {\n            ownProps.history.push('/admin/dashboard')\n        }).catch(err => {\n            console.log(err)\n        })\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (AdminLogin)\n","import toastr from '../../../assets/toast'\nimport axios from 'axios';\nimport { baseUrl } from '../../../config/server';\n\nlet config = {\n    headers: {\n        'Content-Type': 'application/json',\n        'Authorization': localStorage.getItem('payld_token_s')\n    }\n}\n\nexport const getAllTasks = () => {\n    return ((dispatch, getState) => {\n        dispatch({type: 'REQUESTING_SOMETHING'})\n\n        // Make async request\n        axios.get(baseUrl + '/task/all').then(res => {\n            // console.log(res.data);\n            dispatch({type: 'GOTTEN_TASKS', data: res.data.data})\n        }).catch(err => {\n            console.log(err.response.data.message)\n        })\n    })\n}\n\nexport const getAllUsers = () => {\n    return ((dispatch, getState) => {\n        return new Promise ((resolve, reject) => {\n            dispatch({type: 'REQUESTING_SOMETHING'})\n    \n            // Make async request\n            axios.get(baseUrl + '/user/all').then(res => {\n                // console.log(res.data);\n                dispatch({type: 'GOTTEN_USERS', data: res.data.data})\n                resolve()\n            }).catch(err => {\n                console.log(err.response.data.message)\n                reject()\n            })\n        })\n    })\n}\n\nexport const create_new_task = (task) => {\n    return ((dispatch, getState) => {\n        dispatch({type: 'REQUESTING_TASK'})\n\n        // Make async request\n        axios.post(baseUrl + '/task/create', task, config).then(res => {\n            // console.log(res.data);\n            const obj = {\n                description: res.data.data.description,\n                user: {\n                    username: res.data.user_name\n                },\n                comments: [],\n                status: res.data.data.status,\n                _id: res.data.data._id\n            }\n            dispatch({type: 'CREATED_TASK', data: obj})\n            toastr.showSuccessToast(res.data.message)\n        }).catch(err => {\n            console.log(err.response.data)\n            toastr.showDangerToast(err.response.data.message)\n        })\n    })\n}\n\nexport const archiveTask = (task_id) => {\n    return ((dispatch, getState) => {\n        // Make async function\n        const obj = {\n            task_id\n        }\n        axios.put(baseUrl + '/task/archive', obj, config).then(res => {\n            console.log(res.data);\n            toastr.showSuccessToast('Successfully archived the task')\n            dispatch({type: 'ARCHIVED_TASK', data: task_id})\n        }).catch(err => {\n            console.log(err.response);\n            toastr.showDangerToast(err.response.data.message)\n        })\n    })\n}","import React, { Component } from 'react'\nimport style from './TaskList.module.scss'\nimport { connect } from 'react-redux';\nimport { archiveTask } from '../../../store/actions/user/taskAction';\n\nexport class TaskList extends Component {\n\n    deleteComment = (comment_id) => {\n        console.log(comment_id)\n    }\n\n    renderSwitch = (key) => {\n        switch (key) {\n            case 'new':\n                return (\n                    <span className=\"badge badge-primary\">new</span>\n                )\n\n            case 'in-progress':\n                return (\n                    <span className=\"badge badge-secondary\">in-progress</span>\n                )\n\n            case 'completed':\n                return (\n                    <span className=\"badge badge-success\">completed</span>\n                )\n\n            case 'archived':\n                return (\n                    <span className=\"badge badge-info\">archived</span>\n                )\n\n            default: \n                return null\n        }\n    }\n\n    render() {\n        const { tasks } = this.props\n        return (\n            <div>\n                <div className=\"container\">\n                    <div className=\"card\" style={{height: '90vh', overflow: 'scroll'}}>\n                        <h3 className=\"mt-3\">List of all tasks</h3>\n                        <div className=\"card-body\">\n                            <div className=\"table-responsive\">\n                                <table className=\"table table-hover\">\n                                    <thead>\n                                        <tr>\n                                            <th>Description</th>\n                                            <th>Assigned</th>\n                                            <th>Comments</th>\n                                            <th>Status</th>\n                                            <th>Action</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {\n                                            tasks.length !== 0 ? tasks.map(task => {\n                                                return (\n                                                    <tr key={task._id}>\n                                                        <td>{task.description}</td>\n                                                        <td>{task.user.username}</td>\n                                                        <td>\n                                                            {\n                                                                task.comments.length !== 0 ? task.comments.map(comment => {\n                                                                    return (\n                                                                        <ul className=\"pl-0\" style={{listStyleType: 'none'}}>\n                                                                            {\n                                                                                comment.message ? (\n                                                                                    <li>\n                                                                                        <small>\n                                                                                            {comment.message}\n                                                                                            <i className=\"fas fa-trash\" style={{color: 'red', cursor: 'pointer'}} onClick={() => this.delecomment(comment._id)}></i>\n                                                                                        </small>\n                                                                                    </li>\n                                                                                ) : (\n                                                                                    <li><small>There are no comments at the moment</small></li>\n                                                                                )\n                                                                            }\n                                                                        </ul>\n                                                                    )\n                                                                }) : (\n                                                                    <small>There are no comments at the moment</small>\n                                                                )\n                                                            }\n                                                        </td>\n                                                        <td>\n                                                            { this.renderSwitch(task.status) }\n                                                        </td>\n                                                        <td>\n                                                            <div>\n                                                                <span className={`${style.moreOptionsRight} bg-danger`} onClick={() => this.props.archiveTask(task._id)}>\n                                                                    <i className=\"fas fa-file-archive\" style={{color: 'white'}}></i>\n                                                                    <span className=\"ml-2 text-white\">Archive</span>\n                                                                </span>\n                                                            </div>\n                                                        </td>\n                                                    </tr>\n                                                )\n                                            }) : null\n                                        }\n                                    </tbody>\n                                </table>\n                                \n                                {\n                                    tasks.length === 0 ? (\n                                        <h3 className=\"text-center\" style={{fontWeight: 'lighter'}}>There are no tasks at the moment</h3>\n                                    ) : null\n                                }\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        archiveTask: (task_id) => dispatch(archiveTask(task_id))\n    }\n}\n\nexport default connect(null, mapDispatchToProps) (TaskList)\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport style from './Dashboard.module.scss'\nimport { getAllTasks, getAllUsers, create_new_task } from '../../../store/actions/user/taskAction';\nimport TaskList from '../TaskList/TaskList'\n\n\nexport class Dashboard extends Component {\n\n    state = {\n        description: '',\n        user_id: ''\n    }\n\n    componentWillMount = () => {\n        if (this.props.admin && this.props.tasks.length === 0) {\n            this.props.fetchTasks()\n        }\n        if (this.props.admin && this.props.users.length === 0) {\n            this.props.fetchUsers().then(() => {\n                if (this.props.users.length !== 0) {\n                    this.setState({\n                        user_id: this.props.users[0]._id\n                    })\n                }\n            })\n        }\n    }\n\n    logout = () => {\n        localStorage.clear();\n        window.location.href = '/admin/login'\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    handleSelect = (e) => {\n        this.props.users.forEach(element => {\n            if (element.username === e.target.value) {\n                this.setState({\n                    user_id: element._id\n                })\n            }\n        });\n    }\n\n    createNewTask = (e) => {\n        e.preventDefault()\n        this.props.create_new_task(this.state)\n    }\n\n    render() {\n        if (!this.props.admin) return (\n            <Redirect to=\"/admin/login\"></Redirect>\n        )\n        return (\n            <div>\n                {\n                    this.props.loading ? (\n                        <div className={`${style.loading}`}>\n                            <div className={`${style.loading_bar}`} style={{marginRight: '10px'}}></div>\n                            <div className={`${style.loading_bar}`} style={{marginRight: '10px'}}></div>\n                            <div className={`${style.loading_bar}`} style={{marginRight: '10px'}}></div>\n                            <div className={`${style.loading_bar}`}></div>\n                        </div>\n                    ) : (\n                        <div>\n                            <div className=\"container\">\n                                <nav className={style.light_text_header}>\n                                    <span>Welcome Administrator</span>\n                                    <span style={{float: 'right', cursor: 'pointer'}} onClick={this.logout}>\n                                        <img src=\"/img/images/logout.png\" alt=\"\" className=\"img-fluid\"/>\n                                        <span style={{fontSize: 'smaller', marginLeft: '7px'}}>Logout</span>\n                                    </span>\n                                </nav>\n                            </div>\n                            <div className={`${style.dash_layout}`}>\n                                <div className=\"row\">\n                                    <div className={`${style.center_items} col-12 col-md-4`}>\n                                        <div className=\"container\">\n                                            <div className=\"card\">\n                                                <div className=\"card-body\">\n                                                    <h3>Create Task</h3>\n                                                    <hr/>\n                                                    <form className=\"text-left\" onSubmit={this.createNewTask}>\n                                                        <div className=\"mb-3\">\n                                                            <label htmlFor=\"descrition\">Description</label>\n                                                            <textarea name=\"description\" id=\"description\" cols=\"10\" rows=\"5\" onChange={this.handleChange} className=\"form-control\" value={this.state.description}></textarea>\n                                                        </div>\n                                                        \n                                                        {\n                                                            this.props.users.length !== 0 ? (\n                                                                <div className=\"form-group\">\n                                                                <label htmlFor=\"select_user\">Select a user</label>\n                                                                <select className={`${style.custom_select} form-control`} id=\"username\" onChange={this.handleSelect}>\n                                                                    {\n                                                                        this.props.users ? this.props.users.map(user => {\n                                                                            return (\n                                                                                <option value={user.username} key={user._id}>{user.username}</option>\n                                                                            )\n                                                                        }) : null\n                                                                    }\n                                                                </select>\n                                                            </div>\n                                                            ) : (\n                                                                <div className=\"form-group\">\n                                                                    <p>There are no users in the system yet....</p>\n                                                                </div>\n                                                            ) \n                                                        }\n\n                                                        {\n                                                            this.props.length !== 0 ? (\n                                                                <div className=\"text-right\">\n                                                                    <button className=\"btn btn-success\" type=\"submit\">\n                                                                        Create\n                                                                        {\n                                                                            this.props.submit ? (\n                                                                                <div className=\"spinner-border spinner-border-sm ml-4\">\n                                                                                    <span className=\"sr-only\">Loading...</span>\n                                                                                </div>\n                                                                            ) : null\n                                                                        }\n                                                                    </button>\n                                                                </div>\n                                                            ) : null\n                                                        }\n\n                                                    </form>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                    <div className={`${style.center_items} col-12 col-md-8`}>\n                                        <TaskList tasks={this.props.tasks} />\n                                    </div>\n\n                                </div>\n                            </div>\n                        </div>\n                    )\n                }\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    // console.log(state.task.tasks)\n    return {\n        admin: state.auth.admin,\n        tasks: state.task.tasks,\n        users: state.task.users,\n        loading: state.task.loading,\n        submit: state.task.submit\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchTasks: () => dispatch(getAllTasks()),\n        fetchUsers: () => {\n            return new Promise ((resolve, reject) => {\n                dispatch(getAllUsers()).then(() => {\n                    resolve()\n                }).catch(() => {\n                    reject()\n                })\n            })\n        },\n        create_new_task: (task) => dispatch(create_new_task(task))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (Dashboard)\n","import React, { Component } from 'react'\nimport { Route, BrowserRouter, Switch } from 'react-router-dom';\n\n// Import Components\nimport Home from './components/Home/Home';\nimport NotFound from './components/NotFound/NotFound';\nimport Register from './components/auth/Register';\nimport Login from './components/auth/Login'\nimport AdminLogin from './components/admin/auth/AdminLogin'\nimport Dashboard from './components/admin/dashboard/Dashboard'\n\nexport class App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/register\" component={Register} />\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/admin/login\" component={AdminLogin} />\n          <Route exact path=\"/admin/dashboard\" component={Dashboard} />\n          <Route exact path=\"**\" component={NotFound} />\n        </Switch>\n      </BrowserRouter>\n    )\n  }\n}\n\nexport default App\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n    tasks: [],\n    users: [],\n    loading: false,\n    submit: false\n}\n\nconst taskReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'GOTTEN_TASKS':\n            return {\n                ...state,\n                tasks: action.data,\n                loading: false\n            }\n\n        case 'GOTTEN_USERS':\n            return {\n                ...state,\n                users: action.data,\n                loading: false\n            }\n\n        case 'REQUESTING_SOMETHING':\n            return {\n                ...state,\n                loading: true\n            }\n\n        case 'REQUESTING_TASK':\n            return {\n                ...state,\n                submit: true\n            }\n\n        case 'CREATED_TASK':\n            return {\n                ...state,\n                tasks: [...state.tasks, action.data],\n                submit: false\n            }\n        \n        case 'ARCHIVED_TASK':\n            const newTask =  state.tasks.map(element => {\n                if (element._id === action.data) {\n                    element.status = 'archived';\n                }\n                return element;\n            })\n            // console.log(newTask)\n            return {\n                ...state,\n                tasks: newTask\n            }\n    \n        default:\n            return state\n    }\n}\n\nexport default taskReducer;","const initState = {\n    user: localStorage.getItem('payld_token'),\n    admin: localStorage.getItem('payld_token_s'),\n    loading: false\n}\n\nconst authReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'REQUESTING':\n            return {\n                ...state,\n                loading: true\n            }\n\n        case 'SUCCESSFUL':\n            return {\n                ...state,\n                user: localStorage.getItem('payld_token'),\n                loading: false\n            }\n\n        case 'ERROR':\n            return {\n                ...state,\n                loading: false\n            }\n\n        case 'ADMIN_SUCCESSFUL':\n            return {\n                ...state,\n                admin: localStorage.getItem('payld_token_s'),\n                loading: false\n            }\n\n        default:\n            return state\n    }\n}\n\nexport default authReducer","import { combineReducers } from 'redux';\nimport taskReducer from './taskReducer';\nimport authReducer from './authReducer'\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    task: taskReducer\n});\n\nexport default rootReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// Importing necessary modules\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk'\nimport rootReducer from './store/reducers/rootReducer';\n\n// Import assets\nimport 'jquery-toast-plugin';\nimport 'jquery-toast-plugin/dist/jquery.toast.min.css';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk))\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}