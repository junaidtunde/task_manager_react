{"version":3,"sources":["../server/app.js"],"names":["mongoose","connect","process","env","DB","useNewUrlParser","useCreateIndex","err","response","console","log","app","use","swaggerUi","serve","setup","swaggerDocument","set","express","static","path","join","__dirname","bodyParser","json","urlencoded","extended","routes","get","req","res","sendFile"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEAA,mBAASC,OAAT,CAAiBC,QAAQC,GAAR,CAAYC,EAA7B,EAAiC;AACrBC,qBAAiB,IADI;AAErBC,oBAAgB;AAFK,CAAjC,EAGW,UAACC,GAAD,EAAMC,QAAN,EAAmB;AAC1B,QAAID,GAAJ,EAAS;AACLE,gBAAQC,GAAR,CAAYH,GAAZ;AACH,KAFD,MAEO;AACHE,gBAAQC,GAAR,CAAY,uBAAZ;AACH;AACJ,CATD;;AAWA,IAAMC,MAAM,wBAAZ;;AAEAA,IAAIC,GAAJ,CAAQ,WAAR,EAAqBC,2BAAUC,KAA/B,EAAsCD,2BAAUE,KAAV,CAAgBC,iBAAhB,CAAtC;;AAEAL,IAAIC,GAAJ,CAAQ,qBAAR;;AAEA;AACAD,IAAIM,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;;AAEA;AACAN,IAAIC,GAAJ,CAAQM,kBAAQC,MAAR,CAAeC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,gBAArB,CAAf,CAAR;AACAX,IAAIC,GAAJ,CAAQW,qBAAWC,IAAX,EAAR;AACAb,IAAIC,GAAJ,CAAQW,qBAAWE,UAAX,CAAsB;AAC1BC,cAAU;AADgB,CAAtB,CAAR;;AAIA;AACAf,IAAIC,GAAJ,CAAQ,SAAR,EAAmBe,gBAAnB;;AAEAhB,IAAIiB,GAAJ,CAAQ,IAAR,EAAc,UAACC,GAAD,EAAMC,GAAN,EAAc;AACxBA,QAAIC,QAAJ,CAAaX,eAAKC,IAAL,CAAUC,SAAV,EAAqB,2BAArB,CAAb;AACH,CAFD;;AAIA;AACA;AACA;;kBAEeX,G","file":"app.js","sourcesContent":["import express from 'express';\nimport routes from './routes';\nimport mongoose from 'mongoose';\nimport bodyParser from 'body-parser';\nimport path from 'path';\nimport cors from 'cors';\nimport swaggerUi from 'swagger-ui-express';\nimport swaggerDocument from './../swagger/swagger.json';\n\nmongoose.connect(process.env.DB, {\n            useNewUrlParser: true,\n            useCreateIndex: true\n        }, (err, response) => {\n    if (err) {\n        console.log(err);\n    } else {\n        console.log('Connected to mongo...');\n    }\n});\n\nconst app = express();\n\napp.use('/api-docs', swaggerUi.serve, swaggerUi.setup(swaggerDocument));\n\napp.use(cors());\n\n// set the view engine to ejs\napp.set('view engine', 'ejs');\n\n// make express look in the public directory for assets (css/js/img)\napp.use(express.static(path.join(__dirname, '../client/dist')));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({\n    extended: true\n}));\n\n//Prefix the API version\napp.use('/api/v1', routes);\n\napp.get('/*', (req, res) => {\n    res.sendFile(path.join(__dirname, '../client/dist/index.html'));\n});\n\n// app.listen(port, () => {\n//     console.log('The server has started on ' + `${port}`);\n// });\n\nexport default app;"]}